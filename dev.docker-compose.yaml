version: "3.9"
services:
  app-service:
    image: "gymmy-app:dev"
    container_name: "gymmy-app_dev"
    build:
      context: app
      dockerfile: dev.Dockerfile
    networks:
      - gymmy-network
    ports:
      - 3000:3000
    volumes:
      - ./app:/app
    environment:
      - NODE_ENV=dev
    restart: "no"  # Could be always, on-failure, unless-stopped
  api-service:
    image: "gymmy-api:dev"
    container_name: "gymmy-api_dev"
    build:
      context: api
      dockerfile: dev.Dockerfile
    ports:
      - 8080:8080
      - 443:443
    volumes:
      - ./api:/app
    networks:
      - gymmy-network
  mongo:
    image: mongo:4.2.8
    container_name: mongo
    restart: unless-stopped
    #load env vars
    env_file: .docker.env
    environment:
      # MONGO_INITDB_ROOT_USERNAME and MONGO_INITDB_ROOT_PASSWORD together create
      # a root user in the admin authentication database and ensure that authentication is enabled
      # when the container starts. We have set MONGO_INITDB_ROOT_USERNAME and MONGO_INITDB_ROOT_PASSWORD
      # using the values from our .docker.env file, which we pass to the db service using the env_file option.
      - MONGO_INITDB_ROOT_USERNAME=$DB_ADMIN
      - MONGO_INITDB_ROOT_PASSWORD=$DB_ADMIN_PWD
      - MONGO_INITDB_DATABASE=$DB_NAME
    ports:
       - 27017:27017
    volumes:
      - ./mongo/:/docker-entrypoint-initdb.d/:ro
      # The named volume dbdata will persist the data stored in Mongo’s default data directory, /data/db.
      # This will ensure that you don’t lose data in cases where you stop or remove containers.
      # - dbdata:/data/db
networks:
  gymmy-network:
